{"version":3,"sources":["components/Navigation/new_logo.svg","components/Homepage/company_logo.svg","components/Login/secure_login.svg","components/Login/documents.svg","components/Navigation/sideDrawer.jsx","components/Navigation/navigation.jsx","components/Homepage/homepage.jsx","components/Login/login.jsx","App.js","components/Login/register.jsx","serviceWorker.js","index.js"],"names":["module","exports","SideDrawer","props","drawerClass","show","className","href","Nav","state","isClicked","handleClick","setState","prevState","handleBackdropClick","backdrop","this","onClick","src","Logo","alt","Component","Homepage","Login","ref","containerRef","loginImg","htmlFor","type","name","placeholder","App","React","isLogginActive","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,2RC2B5BC,G,MAvBI,SAAAC,GACjB,IAAIC,EAAc,CAAC,eAKnB,OAJGD,EAAME,OACPD,EAAc,oBAId,yBAAKE,UAAWF,GACZ,4BACE,wBAAIE,UAAU,iBACZ,uBAAGC,KAAK,KAAR,aAEF,wBAAID,UAAU,iBACZ,uBAAGC,KAAK,KAAR,aAEF,wBAAID,UAAU,iBACZ,uBAAGC,KAAK,KAAR,cC6CGC,E,4MA3DXC,MAAQ,CACJC,WAAW,G,EAGfC,YAAc,WACV,EAAKC,UAAS,SAACC,GACX,MAAO,CAACH,WAAYG,EAAUH,e,EAItCI,oBAAsB,WAClB,EAAKF,SAAS,CAACF,WAAW,K,uDAK1B,IAAIK,EAKJ,OAJGC,KAAKP,MAAMC,YACVK,EAAW,yBAAKT,UAAU,WAAWW,QAASD,KAAKF,uBAInD,yBAAKR,UAAU,WACX,kBAAC,EAAD,CAAYD,KAAMW,KAAKP,MAAMC,YAC5BK,EACJ,gCACI,uBAAGR,KAAK,IAAID,UAAU,QACf,yBAAKA,UAAU,OAAOY,IAAKC,IAAMC,IAAI,UAE5C,6BACI,wBAAId,UAAU,YACV,wBAAIA,UAAU,iBACP,uBAAGC,KAAK,KAAR,aAEP,wBAAID,UAAU,iBACP,uBAAGC,KAAK,KAAR,aAEP,wBAAID,UAAU,iBACP,uBAAGC,KAAK,KAAR,YAIf,uBAAGA,KAAK,IAAID,UAAU,aACf,0CAEP,4BAAQA,UAAU,WAAWW,QAASD,KAAKL,aACvC,yBAAKL,UAAU,YACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,qB,GAlDtBe,a,iBCaHC,I,gBCfFC,EAAb,kDACI,WAAYpB,GAAQ,uCACZA,GAFZ,qDAMM,OACE,yBAAKG,UAAU,iBAAiBkB,IAAKR,KAAKb,MAAMsB,cAC9C,yBAAKnB,UAAU,kBACb,yBAAKA,UAAU,UAAf,SACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKY,IAAKQ,OAEZ,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,cACb,2BAAOqB,QAAQ,YAAf,YACA,2BAAOC,KAAK,OAAOC,KAAK,WAAWC,YAAY,cAEjD,yBAAKxB,UAAU,cACb,2BAAOqB,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWC,KAAK,WAAWC,YAAY,gBAIzD,yBAAKxB,UAAU,UACb,4BAAQsB,KAAK,SAAStB,UAAU,OAAhC,gBA1Bd,GAA2Be,a,iBCsBZU,GCtBeC,IAAMX,U,kDDIlC,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXwB,gBAAgB,GAHD,E,qDAQjB,OACE,yBAAK3B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAZU0B,IAAMX,YEMJa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9d51edbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/new_logo.05bd07e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/company_logo.05bd07e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/secure_login.34480e51.svg\";","module.exports = __webpack_public_path__ + \"static/media/documents.de0c5ce5.svg\";","import React, {Component} from 'react';\nimport './sideDrawer.css';\n\n\nconst SideDrawer = props => {\n  let drawerClass = ['side-drawer'];\n  if(props.show){\n    drawerClass = 'side-drawer open';\n  }\n\n  return (\n    <nav className={drawerClass}>\n        <ul>\n          <li className=\"nav-list-item\">\n            <a href=\"#\">Services</a>\n          </li>\n          <li className=\"nav-list-item\">\n            <a href=\"#\">Projects</a>\n          </li>\n          <li className=\"nav-list-item\">\n            <a href=\"#\">About</a>\n          </li>\n        </ul>\n    </nav>\n  )\n};\n\nexport default SideDrawer;\n","import './navigation.css';\nimport React, { Component } from 'react';\nimport Logo from './new_logo.svg';\nimport SideDrawer from './sideDrawer';\n\nclass Nav extends Component{\n    state = {\n        isClicked: false,\n    };\n\n    handleClick = () => {\n        this.setState((prevState) => {\n            return {isClicked: !prevState.isClicked }\n        })\n    }\n\n    handleBackdropClick = () => {\n        this.setState({isClicked: false});\n    };\n\n    render(){\n\n        let backdrop;\n        if(this.state.isClicked){\n            backdrop = <div className='backdrop' onClick={this.handleBackdropClick}></div>;\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <SideDrawer show={this.state.isClicked} />\n                {backdrop}\n            \t<header>\n            \t    <a href=\"#\" className='logo'>\n                        <img className='logo' src={Logo} alt='logo'></img>\n                    </a>\n            \t    <nav>\n            \t        <ul className=\"nav-list\">\n            \t            <li className=\"nav-list-item\">\n                                <a href=\"#\">Services</a>\n                            </li>\n            \t            <li className=\"nav-list-item\">\n                                <a href=\"#\">Projects</a>\n                            </li>\n            \t            <li className=\"nav-list-item\">\n                                <a href=\"#\">About</a>\n                            </li>\n            \t        </ul>\n            \t    </nav>\n            \t    <a href=\"#\" className='login_btn'>\n                        <button>Login</button>\n                    </a>\n            \t    <button className=\"ham-hide\" onClick={this.handleClick}>\n            \t        <div className=\"ham-butt\">\n            \t            <div className=\"ham-line\"></div>\n            \t            <div className=\"ham-line\"></div>\n            \t            <div className=\"ham-line\"></div>\n            \t        </div>\n            \t    </button>\n            \t</header>\n            </div>\n\n        )\n    };\n}\n\nexport default Nav;","import React, {Component} from 'react';\nimport './homepage.css';\nimport Logo from './company_logo.svg';\n\nfunction Homepage(props) {\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"main-content\">\n                <img src={Logo} alt='company logo' className='company-logo'></img>\n                <div className=\"info-card 1\"></div>\n                <div className=\"info-card 2\"></div>\n                <div className=\"info-card 3\"></div>\n                <div className=\"info-card 4\"></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Homepage;","import React, {Component} from 'react';\nimport loginImg from './secure_login.svg';\n\nexport class Login extends Component {\n    constructor(props) {\n      super(props);\n    }\n  \n    render() {\n      return (\n        <div className=\"base-container\" ref={this.props.containerRef}>\n          <div className=\"form-container\">\n            <div className=\"header\">Login</div>\n            <div className=\"content\">\n              <div className=\"image\">\n                <img src={loginImg} />\n              </div>\n              <div className=\"form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input type=\"text\" name=\"username\" placeholder=\"username\" />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input type=\"password\" name=\"password\" placeholder=\"password\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"footer\">\n              <button type=\"button\" className=\"btn\">\n                Login\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport './App.css';\nimport Nav from './components/Navigation/navigation';\nimport Homepage from './components/Homepage/homepage';\nimport { Login, Register } from './components/Login/index.tsx';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <Login />\n        {/* <Register /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport loginImg from './documents.svg';\n\nexport class Register extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n  \n    render() {\n      return (\n        <div className=\"base-container\" ref={this.props.containerRef}>\n          <div className=\"form-container\">\n            <div className=\"header\">Register</div>\n            <div className=\"content\">\n              <div className=\"image\">\n                  <img src={loginImg} />\n              </div>\n              <div className=\"form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input type=\"text\" name=\"username\" placeholder=\"username\" />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" name=\"email\" placeholder=\"email\" />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input type=\"text\" name=\"password\" placeholder=\"password\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"footer\">\n              <button type=\"button\" className=\"btn\">\n                Register\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}